/* tslint:disable */
/* eslint-disable */
/**
 * Hospital Management Api
 * Hospital Management System for Web-In-Cloud system
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: student@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DepartmentCapacity } from './DepartmentCapacity';
import {
    DepartmentCapacityFromJSON,
    DepartmentCapacityFromJSONTyped,
    DepartmentCapacityToJSON,
} from './DepartmentCapacity';

/**
 * 
 * @export
 * @interface Department
 */
export interface Department {
    /**
     * Department unique identifier
     * @type {string}
     * @memberof Department
     */
    id?: string;
    /**
     * Department name
     * @type {string}
     * @memberof Department
     */
    name: string;
    /**
     * Department description
     * @type {string}
     * @memberof Department
     */
    description: string;
    /**
     * Floor number where department is located
     * @type {number}
     * @memberof Department
     */
    floor: number;
    /**
     * 
     * @type {DepartmentCapacity}
     * @memberof Department
     */
    capacity: DepartmentCapacity;
    /**
     * Date and time when department was created
     * @type {Date}
     * @memberof Department
     */
    createdAt?: Date;
    /**
     * Date and time when department was last updated
     * @type {Date}
     * @memberof Department
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the Department interface.
 */
export function instanceOfDepartment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "floor" in value;
    isInstance = isInstance && "capacity" in value;

    return isInstance;
}

export function DepartmentFromJSON(json: any): Department {
    return DepartmentFromJSONTyped(json, false);
}

export function DepartmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Department {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'],
        'floor': json['floor'],
        'capacity': DepartmentCapacityFromJSON(json['capacity']),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function DepartmentToJSON(value?: Department | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'floor': value.floor,
        'capacity': DepartmentCapacityToJSON(value.capacity),
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

